const passport = require('passport');
const mongoose = require('mongoose');
const google_strategy = require('passport-google-oauth20').Strategy;
const keys = require('../config/keys');
const User = mongoose.model('users');
//user id here is the automatic id generated by mongodb for evry new entry you put in database
//purpose is we can create facebook,insta login so not to confuse we user mongodb generated id
//user passed is momgoose model
passport.serializeUser((user, done)=>{
  done(null,user.id);

});

//convert id into user models
passport.deserializeUser((id,done)=>{
  //return promise
  User.findById(id).then(user =>{
    done(null,user);
  })});
//usuage of google oauth20
//new will create a new google strategy
//@param1 is google strategy with clientid and key
//@param2 is code we get from call back
//acess read email or other detail like their contact list
//refresh token give us the access token as it expires in some amount of time
//profile will give details about the user
passport.use(new google_strategy({
  clientID : keys.googleClientID,
  clientSecret : keys.googleClientSecret,
  callbackURL : '/auth/google/callback'
  //done tells thar hey i am done giving you profile id proceed with authentication
},(accessToken, refreshToken, profile,done)=>{
  //findOne returns a promise which we use for users
  //if user is already in database do not create other record
  User.findOne({googleId : profile.id}).then((existingUser) => {
    if(existingUser){
      //.error to tell passport
      //user record
      done(null,existingUser);
    }
    else{
      new User({googleId : profile.id}).save().then(user => done(null,user));
    }
  });


}));
